---
- name: gather os specific variables
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yaml"
        - "{{ ansible_distribution }}.yaml"
        - "{{ ansible_os_family }}.yaml"
        - "default.yaml"
      paths:
        - vars

- name: include os specific tasks
  ansible.builtin.include_tasks: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yaml"
        - "{{ ansible_distribution }}.yaml"
        - "{{ ansible_os_family }}.yaml"
        - "default.yaml"
      paths:
        - tasks

- name: install unbound
  package:
    name: "{{ unbound_package_name }}"
    state: "{{ unbound_package_state }}"

- name: configure unbound interfaces
  template:
    src: listen.conf.j2
    dest: "{{ unbound_conf_d_path }}/listen.conf"
    validate: "{{ unbound_checkconf_command }}"
  notify:
    - restart unbound

- name: configure unbound forward zones
  template:
    src: forward.conf.j2
    dest: "{{ unbound_conf_d_path }}/forward.conf"
    validate: "{{ unbound_checkconf_command }}"
  notify:
    - reload unbound

- name: start unbound
  service:
    name: "{{ unbound_service_name }}"
    state: "{{ unbound_service_state }}"
    enabled: "{{ unbound_service_enabled }}"

# vim:ft=yaml.ansible:
